package day06.accessModifier;

public class AccessModifierPractice {
//	접근 제어자
//	public
//	위치에 따른 접근에 제한이 없음을 의미한다.
//	특별히 접근을 제한하려는 목적이 없다면
//	public으로 설정하는 것이 일반적이다.

//	default
//	접근 제어자 기본값으로써, 접근 제어자를 명시적으로 작성하지 않을 경우
//	자동으로 들어가는 값이다.
//	default는 "같은 패키지" 내의 클래스만 접근이 가능하다.

//	protected
//	클래스 심화에서 "상속" 개념을 배운 뒤에 사용하는 접근 제어자로
//	default 접근 제어자에 "상속" 대상자도 포함되는 접근 제어자다.

//	private
//	기본 클래스에는 사용할 수 없는 접근 제어자로
//	클래스 내의 메서드나 변수를 외부의 다른 어떤 클래스에서도
//	접근하거나 볼 수 없도록 하는 접근 제어자다.
//	해당 클래스 내부에서만 사용하려는 객체에 붙인다.

	public static void main(String[] args) {
//		static : 정적인
//		static 예약어는 메서드, 변수 앞에 붙어서
//		메모리에 해당 정보를 올릴 때 가장 먼저 올라간다는 의미다.
//		프로그램이 종료되기 전까지 메모리에서 내려오지 않는다.

//		메서드(method)
//		다른 언어에서는 함수(function)이라고도 부르는 개념으로,
//		하나의 코드 블록을 메서드라는 단위로 묶어서
//		메서드 이름만으로 그 기능을 가져다 쓸 수 있게 하는
//		"코드 묶음"이다.

	}
}
